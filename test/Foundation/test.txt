1-
1. What is NOT a reasonable goal for test automation?
Release features faster
Enable continuous testing
Reduce regression testing time
-Solve all quality issues
========================================
2. What’s the first thing that should be decided before starting a new test automation initiative?
Which programming language to use
-What's the goal of automation
How many people are needed
Which framework to use
=========================================
3. Which of these tasks are associated with a test automation project?
Authoring automated tests
Monitoring test results
Maintaining automated tests
-All the above
===========================================
4. Which is NOT a consideration when determining who will write the automated tests?
Person's capacity
Person's skill set
-Person's seniority
Person's desire
==========================================
5. It’s recommended that your very first automated test should be immediately added to continuous integration to begin gating developer check-ins:
True
-False
=============================================================
2-
1. What’s the best approach for getting team buy-in for test automation?
-Communicate the goal, strategy, and opportunities for collaboration
Assign tasks to individuals
Force team members to contribute
All of the above
2. Given the traditional role of a product owner, what’s the most probable way they can assist with test automation?
Automate tests
-Provide business insight on which scenarios should be automated
Triage test failures
Evaluate test automation tools
3. What’s a benefit of good test automation to product developers?
They get to write more code
-They are able to develop features with more confidence
They don’t need to worry about testing
None of the above
4. How should test automation affect manual testers?
Replace them
Slow them down
-Assist them
Devalue them
5. Which of these team members can play a part in the success of test automation?
Developer
Tester
Business analyst
-All of the above
========================================================
3-
1. Which of the following does NOT improve test automatability?
Code seams
UI element identifiers
Application shortcuts
-Shopping carts
2. Which of the following is NOT a level of the Test Automation Pyramid?
-Services
UI
Unit
JavaScript
3. Which level should you automate your test at to have it execute as quickly as possible?
-As close to the production code as possible
As far away from the production code as possible
The easiest level to get to
Any level
4. The absence of reliable element identifiers affects which type of tests?
Unit
Service
API
-UI
5. Which is NOT an example of utilizing a code seam?
-Navigating the UI just as a user would
Calling a business level function directly
Invoking an HTTP request to bypass the UI
Avoiding navigation by launching specific application pages
===================================================
4-
1. Which of these is a key consideration for choosing a tool for test automation?
Who will be using them
Available support and resources
Compatibility with required programming languages, devices, and browsers
-All of the above
2. When considering a programming language for test automation, which factor may be a deterrent?
Developers use the same language
Easy to learn
-Unsupported by most test automation tools
Great documentation
3. Which of the following is NOT an example of automated tests interacting with the application?
Calling product-level functions
Making HTTP requests to product’s services
Navigating product’s UI
-Reporting test results
4. The purpose of validation libraries is to:
-Enable a test to pass or fail
Add tests to continuous integration
Make API calls
Navigate UI
====================================================
5-
1. Which of the following is NOT a consideration needed for future-proofing automated tests?
Utilizing design patterns
Clean coding practices
Enabling parallel execution of tests
-Keeping the source code on your machine
2. To run tests in parallel, your tests should:
-Be thread-safe
Rely on other tests
Modify shared test data when needed
Define shared objects/variables as static
3. Which of the following is a violation of clean coding practices?
Short tests
-Excessive code duplication
Short methods
Efficient waiting techniques
4. To future-proof your tests, which design patterns should you use?
All of them
None of them
-The ones that make sense for your project
Only one
===================================================================
6-
1. What are some ways in which your automated tests may need to scale beyond your local machine?
Different environments
Different devices
Different browsers
-All of the above
2. When scaling for different environments, the management of ______ should be considered.
-Environment-specific data
Programming languages
Test automation tools
APIs
3. What’s the best approach when choosing which browsers to execute on?
The tests are automated; run on every browser!
Only run on the browser which is easiest to automate for
-Consider your business needs and choose your browsers accordingly
Run in all browsers offered by your cloud provider
4. What considerations should be made for mobile test automation?
Dealing with responsive layouts
Mobile apps developed by your organization
Appropriate automation tools
-All of the above
==========================================================================
7-
1. What’s the best way to avoid unrealistic expectations from your test automation initiative?
Don’t set any expectations
-Identify and communicate expectations early
Secretly set personal expectations
None of the above
2. Which of the following is NOT a reasonable return on your investment in test automation?
Fast feedback
Faster development time
Shortened regression testing cycles
-100% test coverage
3. Most benefits of test automation are seen after the first test is automated.
True
-False
4. The benefits of test automation cannot be measured.
True
-False
5. Test automation is a ________
Side project
Software development project
Waste of time
Way to replace testers
